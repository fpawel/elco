{% package delphirpc %}

{% func (x *ServicesSrc) Unit() %} 
unit {%s x.unitName %};

interface

{%s uses(x.interfaceUses) %}

type 
    {% for _, srv := range x.services %} T{%s srv.serviceName %} = class 
    public
        {% for _,m := range srv.methods %}{%s= m.signature("") %};static;
        {% endfor %} 
    end;{% endfor %}

implementation 

{%s uses(x.implUses) %}

{% for _, srv := range x.services %} {% for _,m := range srv.methods %}{%s= m.body(srv.serviceName) %}
{% endfor %}{% endfor %} 
end.{% endfunc %}

{% func (x method) body(srvName string) %} 
{%s= x.signature("T" + srvName + ".") %};
var
    req : ISuperobject;
begin
    req := {%if x.namedParams %}SO{% else %}SA([]){% endif %};
    {% for _,p := range x.params %}{%s= x.genSetParam(p) %};
    {% endfor %}{% collapsespace %}
    {%if x.procedure %}
        ThttpRpcClient.GetResponse({%s= x.remoteMethod(srvName) %}, req);
    {% else %}
        {%if x.retPODType && !x.retArray %}
            SuperObject_Get(ThttpRpcClient.GetResponse({%s= x.remoteMethod(srvName) %}, req), Result);
        {% else %}
            ThttpRpcClient.Call({%s= x.remoteMethod(srvName) %}, req, Result);
        {% endif %}
    {% endif %}
    {% endcollapsespace %}
end;
{% endfunc %}

{% func (x method) genSetParam(p param) %}{% collapsespace %}
    {%if x.namedParams %} 
        {%s= p.setFieldInstruction() %}
    {% else %}
        req.AsArray.Add({%s p.name %})
    {% endif %}    
{% endcollapsespace %}{% endfunc %}


{% func (x method) signature(headPart string) %}{% collapsespace %}
    class 
    {%if x.procedure %}
        procedure	
    {% else %}
		function 
	{% endif %} 
    {%s headPart %}{%s x.methodName %}
    {%if len(x.params) > 0 %}
        (
        {% for i, p := range x.params %}
            {%s p.name %} : {%s= p.String() %}
            {%if i < len(x.params) - 1 %} ; {% endif %} 
        {% endfor %}
	    )
    {% endif %}

    {%if !x.procedure %}
        :
        {%if x.retArray %}
            {%s= "TArray<" %} {%s= x.retDelphiType %} {%s= ">" %}
        {% else %}
            {%s= x.retDelphiType %}
        {% endif %}
    {% endif %}
{% endcollapsespace %}{% endfunc %}