// This file is automatically generated by qtc from "service.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line service.qtpl:1
package delphirpc

//line service.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line service.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line service.qtpl:3
func (x *ServicesSrc) StreamUnit(qw422016 *qt422016.Writer) {
	//line service.qtpl:3
	qw422016.N().S(` 
unit `)
	//line service.qtpl:4
	qw422016.E().S(x.unitName)
	//line service.qtpl:4
	qw422016.N().S(`;

interface
    `)
	//line service.qtpl:7
	qw422016.E().S(uses(x.interfaceUses))
	//line service.qtpl:7
	qw422016.N().S(`
type 
    `)
	//line service.qtpl:9
	for _, srv := range x.services {
		//line service.qtpl:9
		qw422016.N().S(` T`)
		//line service.qtpl:9
		qw422016.E().S(srv.serviceName)
		//line service.qtpl:9
		qw422016.N().S(` = class 
    public
        `)
		//line service.qtpl:11
		for _, m := range srv.methods {
			//line service.qtpl:11
			qw422016.N().S(m.signature(""))
			//line service.qtpl:11
			qw422016.N().S(`;
        `)
			//line service.qtpl:12
		}
		//line service.qtpl:12
		qw422016.N().S(` 
    end;`)
		//line service.qtpl:13
	}
	//line service.qtpl:13
	qw422016.N().S(` 


implementation 
    `)
	//line service.qtpl:17
	qw422016.E().S(uses(x.implUses))
	//line service.qtpl:17
	qw422016.N().S(`  

var
    pipe_conn: TPipe;
    
procedure ensure_pipe_connected;
begin
    if Assigned(pipe_conn) then
        exit;
    try
        pipe_conn := TPipe.Create(`)
	//line service.qtpl:27
	qw422016.N().S(x.pipeStr())
	//line service.qtpl:27
	qw422016.N().S(`);
    except
        begin
            if Assigned(pipe_conn) then
                pipe_conn.Free;
            raise;
        end;
    end;
end;

`)
	//line service.qtpl:37
	for _, srv := range x.services {
		//line service.qtpl:37
		qw422016.N().S(` `)
		//line service.qtpl:37
		for _, m := range srv.methods {
			//line service.qtpl:37
			qw422016.N().S(m.body(srv.serviceName))
			//line service.qtpl:37
			qw422016.N().S(`
`)
			//line service.qtpl:38
		}
		//line service.qtpl:38
	}
	//line service.qtpl:38
	qw422016.N().S(` 
end.`)
//line service.qtpl:39
}

//line service.qtpl:39
func (x *ServicesSrc) WriteUnit(qq422016 qtio422016.Writer) {
	//line service.qtpl:39
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line service.qtpl:39
	x.StreamUnit(qw422016)
	//line service.qtpl:39
	qt422016.ReleaseWriter(qw422016)
//line service.qtpl:39
}

//line service.qtpl:39
func (x *ServicesSrc) Unit() string {
	//line service.qtpl:39
	qb422016 := qt422016.AcquireByteBuffer()
	//line service.qtpl:39
	x.WriteUnit(qb422016)
	//line service.qtpl:39
	qs422016 := string(qb422016.B)
	//line service.qtpl:39
	qt422016.ReleaseByteBuffer(qb422016)
	//line service.qtpl:39
	return qs422016
//line service.qtpl:39
}

//line service.qtpl:41
func (x method) streambody(qw422016 *qt422016.Writer, srvName string) {
	//line service.qtpl:41
	qw422016.N().S(` 
`)
	//line service.qtpl:42
	qw422016.N().S(x.signature("T" + srvName + "."))
	//line service.qtpl:42
	qw422016.N().S(`;
var    
    req, resp: ISuperobject;`)
	//line service.qtpl:44
	if x.retArray {
		//line service.qtpl:44
		qw422016.N().S(` i:ISuperobject;`)
		//line service.qtpl:44
	}
	//line service.qtpl:44
	qw422016.N().S(`
begin
    ensure_pipe_connected;
    req := `)
	//line service.qtpl:47
	if x.namedParams {
		//line service.qtpl:47
		qw422016.N().S(`SO`)
		//line service.qtpl:47
	} else {
		//line service.qtpl:47
		qw422016.N().S(`SA([])`)
		//line service.qtpl:47
	}
	//line service.qtpl:47
	qw422016.N().S(`;
    `)
	//line service.qtpl:48
	for _, p := range x.params {
		//line service.qtpl:48
		qw422016.N().S(x.genSetParam(p))
		//line service.qtpl:48
		qw422016.N().S(`;
    `)
		//line service.qtpl:49
	}
	//line service.qtpl:49
	qw422016.N().S(`    
    resp := Pipe_GetJsonrpcResult(pipe_conn, `)
	//line service.qtpl:50
	qw422016.N().S(x.remoteMethod(srvName))
	//line service.qtpl:50
	qw422016.N().S(`, req);
    `)
	//line service.qtpl:51
	if !x.procedure {
		//line service.qtpl:51
		qw422016.N().S(`
        `)
		//line service.qtpl:52
		if x.retArray {
			//line service.qtpl:52
			qw422016.N().S(` 
            for i in resp do
            begin
                SetLength(Result, Length(Result)+1);
                `)
			//line service.qtpl:56
			if x.retPODType {
				//line service.qtpl:56
				qw422016.N().S(`                    
                    SuperObject_Get(i, Result[Length(Result)-1]);
                `)
				//line service.qtpl:58
			} else {
				//line service.qtpl:58
				qw422016.N().S(` 
                    Result[Length(Result)-1] := TJson.JsonToObject `)
				//line service.qtpl:59
				qw422016.N().S("<")
				//line service.qtpl:59
				qw422016.N().S(` `)
				//line service.qtpl:59
				qw422016.N().S(x.retDelphiType)
				//line service.qtpl:59
				qw422016.N().S(` `)
				//line service.qtpl:59
				qw422016.N().S(">")
				//line service.qtpl:59
				qw422016.N().S(` (i.AsJson);
                `)
				//line service.qtpl:60
			}
			//line service.qtpl:60
			qw422016.N().S(`
            end;
        `)
			//line service.qtpl:62
		} else {
			//line service.qtpl:62
			qw422016.N().S(`
            `)
			//line service.qtpl:63
			if x.retPODType {
				//line service.qtpl:63
				qw422016.N().S(`
                SuperObject_Get(resp, Result);
            `)
				//line service.qtpl:65
			} else {
				//line service.qtpl:65
				qw422016.N().S(` 
                Result := TJson.JsonToObject `)
				//line service.qtpl:66
				qw422016.N().S("<")
				//line service.qtpl:66
				qw422016.N().S(` `)
				//line service.qtpl:66
				qw422016.N().S(x.retDelphiType)
				//line service.qtpl:66
				qw422016.N().S(` `)
				//line service.qtpl:66
				qw422016.N().S(">")
				//line service.qtpl:66
				qw422016.N().S(` (resp.AsJson);
            `)
				//line service.qtpl:67
			}
			//line service.qtpl:67
			qw422016.N().S(`
        `)
			//line service.qtpl:68
		}
		//line service.qtpl:68
		qw422016.N().S(`
    `)
		//line service.qtpl:69
	}
	//line service.qtpl:69
	qw422016.N().S(`
end;
`)
//line service.qtpl:71
}

//line service.qtpl:71
func (x method) writebody(qq422016 qtio422016.Writer, srvName string) {
	//line service.qtpl:71
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line service.qtpl:71
	x.streambody(qw422016, srvName)
	//line service.qtpl:71
	qt422016.ReleaseWriter(qw422016)
//line service.qtpl:71
}

//line service.qtpl:71
func (x method) body(srvName string) string {
	//line service.qtpl:71
	qb422016 := qt422016.AcquireByteBuffer()
	//line service.qtpl:71
	x.writebody(qb422016, srvName)
	//line service.qtpl:71
	qs422016 := string(qb422016.B)
	//line service.qtpl:71
	qt422016.ReleaseByteBuffer(qb422016)
	//line service.qtpl:71
	return qs422016
//line service.qtpl:71
}

//line service.qtpl:73
func (x method) streamgenSetParam(qw422016 *qt422016.Writer, p param) {
	//line service.qtpl:74
	if x.namedParams {
		//line service.qtpl:75
		qw422016.N().S(p.setFieldInstruction())
		//line service.qtpl:76
	} else {
		//line service.qtpl:76
		qw422016.N().S(`req.AsArray.Add(`)
		//line service.qtpl:77
		qw422016.E().S(p.name)
		//line service.qtpl:77
		qw422016.N().S(`) `)
		//line service.qtpl:78
	}
//line service.qtpl:79
}

//line service.qtpl:79
func (x method) writegenSetParam(qq422016 qtio422016.Writer, p param) {
	//line service.qtpl:79
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line service.qtpl:79
	x.streamgenSetParam(qw422016, p)
	//line service.qtpl:79
	qt422016.ReleaseWriter(qw422016)
//line service.qtpl:79
}

//line service.qtpl:79
func (x method) genSetParam(p param) string {
	//line service.qtpl:79
	qb422016 := qt422016.AcquireByteBuffer()
	//line service.qtpl:79
	x.writegenSetParam(qb422016, p)
	//line service.qtpl:79
	qs422016 := string(qb422016.B)
	//line service.qtpl:79
	qt422016.ReleaseByteBuffer(qb422016)
	//line service.qtpl:79
	return qs422016
//line service.qtpl:79
}

//line service.qtpl:82
func (x method) streamsignature(qw422016 *qt422016.Writer, headPart string) {
	//line service.qtpl:82
	qw422016.N().S(`class `)
	//line service.qtpl:84
	if x.procedure {
		//line service.qtpl:84
		qw422016.N().S(`procedure `)
		//line service.qtpl:86
	} else {
		//line service.qtpl:86
		qw422016.N().S(`function `)
		//line service.qtpl:88
	}
	//line service.qtpl:89
	qw422016.E().S(headPart)
	//line service.qtpl:89
	qw422016.E().S(x.methodName)
	//line service.qtpl:90
	if len(x.params) > 0 {
		//line service.qtpl:90
		qw422016.N().S(`( `)
		//line service.qtpl:92
		for i, p := range x.params {
			//line service.qtpl:93
			qw422016.E().S(p.name)
			//line service.qtpl:93
			qw422016.N().S(`: `)
			//line service.qtpl:93
			qw422016.N().S(p.String())
			//line service.qtpl:94
			if i < len(x.params)-1 {
				//line service.qtpl:94
				qw422016.N().S(`; `)
				//line service.qtpl:94
			}
			//line service.qtpl:95
		}
		//line service.qtpl:95
		qw422016.N().S(`) `)
		//line service.qtpl:97
	}
	//line service.qtpl:99
	if !x.procedure {
		//line service.qtpl:99
		qw422016.N().S(`: `)
		//line service.qtpl:101
		if x.retArray {
			//line service.qtpl:102
			qw422016.N().S("TArray<")
			//line service.qtpl:102
			qw422016.N().S(x.retDelphiType)
			//line service.qtpl:102
			qw422016.N().S(">")
			//line service.qtpl:103
		} else {
			//line service.qtpl:104
			qw422016.N().S(x.retDelphiType)
			//line service.qtpl:105
		}
		//line service.qtpl:106
	}
//line service.qtpl:107
}

//line service.qtpl:107
func (x method) writesignature(qq422016 qtio422016.Writer, headPart string) {
	//line service.qtpl:107
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line service.qtpl:107
	x.streamsignature(qw422016, headPart)
	//line service.qtpl:107
	qt422016.ReleaseWriter(qw422016)
//line service.qtpl:107
}

//line service.qtpl:107
func (x method) signature(headPart string) string {
	//line service.qtpl:107
	qb422016 := qt422016.AcquireByteBuffer()
	//line service.qtpl:107
	x.writesignature(qb422016, headPart)
	//line service.qtpl:107
	qs422016 := string(qb422016.B)
	//line service.qtpl:107
	qt422016.ReleaseByteBuffer(qb422016)
	//line service.qtpl:107
	return qs422016
//line service.qtpl:107
}
